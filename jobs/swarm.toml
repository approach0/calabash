[allocate]
source = [
  . $scripts/iaas/linode.sh $linode_token $linode_docker_mirror,
  . $scripts/iaas/ucloud.sh $ucloud_pubkey $ucloud_prikey $ucloud_username $ucloud_password $ucloud_docker_mirror,
  . $scripts/random/random.sh,
]
spawn = pty
exec = [
  check_args type swarm_id usr
  'eval iaas=\${node_type_${type}_provider}',
  'eval passwd=\${${iaas}_node_passwd}',
  'eval region=\${node_type_${type}_region}',
  'eval specs=\${node_type_${type}_specs}',
  'eval distro="\${node_type_${type}_distro}"',

  'node_label=calabash-${usr}-${swarm_id}-$(rname_short)',
  '${iaas}_node_create $passwd $node_label $region $specs $distro',

  export node_label
]

[install]
source = [
  . $scripts/iaas/linode.sh $linode_token $linode_docker_mirror,
  . $scripts/iaas/ucloud.sh $ucloud_pubkey $ucloud_prikey $ucloud_username $ucloud_password $ucloud_docker_mirror,
  . $scripts/ssh/ssh.sh,
  . $scripts/swarm/swarm.sh,
]
spawn = pty
user = root # for ssh-copy-id to find identity file.
exec = [
  check_args type node_label,
  'eval iaas=\${node_type_${type}_provider}',
  'eval passwd=\${${iaas}_node_passwd}',
  'eval port=\${node_type_${type}_ssh_port}',

  'export nodeID=`${iaas}_node_filter_by_label $node_label`',
  'export nodeIP=`${iaas}_node_map_ipaddr $nodeID`',

  'ssh-keygen -R $nodeIP',
  '$scripts/ssh/ssh-copy-id.expect root@$nodeIP $passwd',
  'sshd_change_port root@$nodeIP 22 $port',
  'swarm_install root@$nodeIP $port'
]
dep = swarm:allocate

[bootstrap]
source = . $scripts/swarm/swarm.sh
exec = [
  check_args type nodeIP,
  'eval iaas=\${node_type_${type}_provider}',
  'eval port=\${node_type_${type}_ssh_port}',
  $SSH -p $port root@$nodeIP $DOCKER swarm init,
  'swarmNodeID=`docker info -f "{{(.Swarm.NodeID)}}"`',
  docker node update --label-add "iaas=$iaas" $swarmNodeID,
  swarm_update_secret_file root@$nodeIP $port $swarm_config_key $_config_file_
  # now create the first node in swarm
  'version=`swarm_config_get root@$nodeIP $port ${swarm_config_key}.latest`',
  'eval docker_mirror=\${${iaas}_docker_mirror}',
  'command=`echo ${swarm_service_0_docker_exec} | sed -e "s/{{version}}/${version}/g"`',
  '''
  set -x
  $SSH -p $port root@$nodeIP $DOCKER service create \
  --name ${swarm_service_0_name} \
  --publish published=${swarm_service_0_portmap},target=$jobd_port \
  --hostname="{{.Service.Name}}-{{.Task.Slot}}" \
  --secret ${swarm_config_key}.$version \
  ${docker_mirror}${swarm_service_0_docker_image} \
  ${command}
  set +x
  '''
]
#dep = swarm:install
