[allocate]
source = [
  . $scripts/iaas/linode.sh $linode_token $linode_docker_mirror,
  . $scripts/iaas/ucloud.sh $ucloud_pubkey $ucloud_prikey $ucloud_username $ucloud_password $ucloud_docker_mirror,
  . $scripts/random/random.sh,
]
spawn = pty
exec = [
  check_args type swarm_id usr
  'eval iaas=\${node_type_${type}_provider}',
  'eval passwd=\${${iaas}_node_passwd}',
  'eval region=\${node_type_${type}_region}',
  'eval specs=\${node_type_${type}_specs}',
  'eval distro="\${node_type_${type}_distro}"',

  'node_label=calabash-${usr}-${swarm_id}-$(rname_short)',
  '${iaas}_node_create $passwd $node_label $region $specs $distro',

  export node_label
]

[install]
source = [
  . $scripts/iaas/linode.sh $linode_token,
  . $scripts/iaas/ucloud.sh $ucloud_pubkey $ucloud_prikey,
  . $scripts/ssh/ssh.sh,
  . $scripts/swarm/swarm.sh,
]
spawn = pty
user = root # for ssh-copy-id to find identity file.
exec = [
  check_args type node_label,
  'eval iaas=\${node_type_${type}_provider}',
  'eval passwd=\${${iaas}_node_passwd}',
  'eval port=\${node_type_${type}_ssh_port}',

  'export nodeID=`${iaas}_node_filter_by_label $node_label`',
  'export nodeIP=`${iaas}_node_map_ipaddr $nodeID`',

  'ssh-keygen -R $nodeIP',
  '$scripts/ssh/ssh-copy-id.expect root@$nodeIP $passwd',
  'sshd_change_port root@$nodeIP 22 $port',
  'swarm_install root@$nodeIP $port'
]
if_not = $SSH which docker
dep = swarm:allocate

[init]
source = . $scripts/swarm/swarm.sh
exec = [
  check_args nodeIP,
  $SSH root@$nodeIP $DOCKER swarm init
]
dep = swarm:install

[leave]
source = . $scripts/swarm/swarm.sh
exec = $DOCKER swarm leave --force

[kv-get]
source = . $scripts/swarm/swarm.sh
exec = [
  check_args key,
  swarm_db_get $key
]
if = which $DOCKER
